Author of Review: Caleb Hernandez
Date: 9/28/2021
Sprint Number: Sprint 1
Name of File: BrickBlock.cs
Author of File: Henry
Comments: 

	Unfortunately we were unable to get the state desgin patter working for any of the blocks so I decided to review one of the block classes. First thing I notice is that
	we have an unused private boolean hasCollided. This is unused for now because we are not yet implementing the state patter for the blocks as stated. Once we implement
	that design pattern that variable wil be in use. The constructor for this class creates a brick block and sets corresponding class variables to be such. The location
	is passed into the constructor as a paramter. We fixed the draw method to no longer have a hardcoded position. The update method contains a lot of smelly code due to
	not using the desing pattern. Specifically the 3 nested if's. If the design pattern was implemented here we could get rid of that logic. The trigger method has to due 
	with not having the state design pattern as well because instead of changing states we trigger the brick block to be bumped. The handleCollision method is also a little 
	messy because of not having a state patter. We have to use various logic to determine what happens to the brick block instead of just changing the states. Overall I 
	think the class does what is needed for this state but it is not very reusable as we found out implementing the other block classes and states. 



Time Taken to Complete: 1 hour
Hypothetical Change: 

	Obviously I think the hypothetical change here would be to make BrickBlock.cs follow the desing pattern so it can be reusable and a lot more cleaned up. 



